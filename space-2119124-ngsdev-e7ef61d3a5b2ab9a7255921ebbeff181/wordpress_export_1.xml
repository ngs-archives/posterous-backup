<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"	xmlns:excerpt="http://wordpress.org/export/1.0/excerpt/"	xmlns:content="http://purl.org/rss/1.0/modules/content/"	xmlns:wfw="http://wellformedweb.org/CommentAPI/"	xmlns:dc="http://purl.org/dc/elements/1.1/"	xmlns:wp="http://wordpress.org/export/1.0/"><channel>	<title>ngsdev.org</title>	<link></link>	<description>memos of my develop life and some announces. ja_JP and sometimes en_US.</description>	<pubDate>Mon Nov 08 16:35:18 -0800 2010</pubDate>	<generator>http://posterous.com</generator>	<language>en</language>	<wp:wxr_version>1.0</wp:wxr_version>	<wp:base_site_url>http://blog.ngsdev.org</wp:base_site_url>	<wp:base_blog_url>http://blog.ngsdev.org</wp:base_blog_url>		<image>		<url>http://files.posterous.com/user_profile_pics/907098/jerryfish100x100.jpg</url>		<title>ngsdev.org</title>		<link>http://blog.ngsdev.org</link>	</image>	<item>	<title>ホスティング環境を整理しました。</title>	<link>http://blog.ngsdev.org/41355457</link>	<pubDate>Sat Jan 29 09:33:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="blog"><![CDATA[blog]]></category>			<category domain="tag" nicename="dreamhost"><![CDATA[dreamhost]]></category>			<category domain="tag" nicename="facebook"><![CDATA[facebook]]></category>			<category domain="tag" nicename="github"><![CDATA[github]]></category>			<category domain="tag" nicename="hosting"><![CDATA[hosting]]></category>			<category domain="tag" nicename="infrastructure"><![CDATA[infrastructure]]></category>			<category domain="tag" nicename="littleapps"><![CDATA[littleapps]]></category>			<category domain="tag" nicename="posterous"><![CDATA[posterous]]></category>			<category domain="tag" nicename="subversion"><![CDATA[subversion]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/41355457</guid>	<description></description>	<content:encoded><![CDATA[<p>ブログや Wiki 、Subversion リポジトリ、友達のサイトなど、相乗りで 使えるネット の VPS に構築していましたが、バージョン管理を Git に移行したり、同じ Apache に、モジュールを共存させすぎたのが原因で、負荷が高かったので、メンテナンスが億劫になり、それぞれウェブサービスに移行しました。</p><dl> <dt>個人/会社サイトホーム</dt> <dd><a href="http://pages.github.com/">GitHub Pages</a></dd> <dt>Wiki</dt> <dd>GitHub Wiki / gist にバックアップ、今後は gist に集約させます。 </dd><dt>個人ブログ</dt> <dd> 過去のものは <a href="http://dreamhost.com/">Dreamhost</a> で、<a href="http://blog1.ngsdev.org/">blog1.ngsdev.org</a> に移行。<br /> 今後は この <a href="http://posterous.com/">Posterous</a> に気が向いたら書いていきます。 </dd> <dt>バージョン管理</dt> <dd> Subversion は、一旦 Repository root を tarball にして、Dreamhost に。<br /> 終っていない / メンテしている案件は、gitsvn で、Git リポジトリに変換。それ以外は放置です。 </dd></dl><p>これからは、Dreamhost にリモートリポジトリを作っていきます。容量無制限なので安心です。</p><p>( ちなみに、iTunes や動画などの大きなデータのバックアップにも使っています。 )</p><p>また、新たに<a href="http://littleapps.jp/">会社のプロダクトサイト</a>を開設しました。</p><p>こちらも Posterous です。 <a href="http://littleapps.jp/">http://littleapps.jp/</a></p><p>ソフトウェアのリリース / アップデート情報などを流していきます。</p><p>それに連動する <a href="http://www.facebook.com/littleapps.jp">Facebook Page</a> も作成したので、よかったら Like ! ボタンをクリックして下さい。</p><p>現時点では、メンバーが 25 人に満たないので、Custom Username を設定できていません。( 参考: <a href="http://www.facebook.com/help/?page=900">Facebook Help Center</a> )</p>]]></content:encoded>	<excerpt:encoded><![CDATA[ブログや Wiki 、Subversion リポジトリ、友達のサイトなど、相乗りで 使えるネット の VPS に構築していましたが、バージョン管理を Git に移行したり、同じ Apache に、モジュールを共存さ...]]></excerpt:encoded>		<wp:post_date>Sat Jan 29 09:33:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Sat Jan 29 09:33:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>41355457</wp:post_id>	<wp:post_name>41355457</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>DBIx::Class::Storage::DBI::mysql::backup</title>	<link>http://blog.ngsdev.org/dbixclassstoragedbimysqlbackup</link>	<pubDate>Tue Feb 01 12:55:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="backup"><![CDATA[backup]]></category>			<category domain="tag" nicename="cpan"><![CDATA[cpan]]></category>			<category domain="tag" nicename="DBIx%3A%3AClass"><![CDATA[DBIx::Class]]></category>			<category domain="tag" nicename="mysql"><![CDATA[mysql]]></category>			<category domain="tag" nicename="perl"><![CDATA[perl]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/dbixclassstoragedbimysqlbackup</guid>	<description></description>	<content:encoded><![CDATA[<p>先月、CPAN に公開したモジュール&nbsp;<a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI::mysql::backup">DBIx::Class::Storage::DBI::mysql::backup</a> の紹介です。</p><p><a href="http://search.cpan.org/perldoc?DBIx::Class::Schema::Versioned">DBIx::Class::Schema::Versioned</a>&nbsp;にある、<code>backup_directory</code>&nbsp;という設定項目は、設定すると <code>backup</code>&nbsp;メソッドをコールするだけで、設定したディレクトリにバックアップを作成してくれるのだろうな、と思いますが、実は、<a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI::SQLite">SQLite</a> など ( 他の DBI は確認してません ) 、<span style=""><a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI">DBIx::Class::Storage::DBI</a> のサブクラス側で各々実装するものらしく、MySQL で</span>&nbsp;<code>backup</code>&nbsp;メソッドをコールすると、以下の様に <code>die</code> してしまいます。</p><blockquote><code style="font-size: 1em;">Can't locate object method "backup" via package "DBIx::Class::Storage::DBI"<br /> &nbsp;&nbsp;&nbsp;&nbsp;at /path/to/lib/site_perl/5.xx.x/DBIx/Class/Schema/Versioned.pm line 560.</code></blockquote><p><a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI::mysql::backup#SYNOPSIS">SYNOPSIS</a>&nbsp;に書いた様に、<span style="font-family: monospace;">Storage::DBI::mysql::backup</span>&nbsp;を、Schema.pm (&nbsp;<span style="">DBIx::Class::Schema のサブクラス</span>&nbsp;) の&nbsp;<code>load_components</code>&nbsp;に加えて下さい。</p><script src="https://gist.github.com/825200.js?file=MyApp-Schema.pl"></script><p>これで&nbsp;<code>backup</code>&nbsp;メソッドをコールしても&nbsp;<code>die</code>&nbsp;しなくなりました。</p><script src="https://gist.github.com/825200.js?file=Snippet%2029.pl"></script><p><span style="font-family: monospace;">backup_directory</span>&nbsp;で 設定したディレクトリに、<em>myapp_db-20110202-050441.sql</em> という名前で、ダンプデータが作成されていると思います。</p><p>よかったら、是非、使ってみてください。</p><script src="https://gist.github.com/825200.js?file=Snippet%2030.sh"></script><p>or checkout from GitHub</p><script src="https://gist.github.com/825200.js?file=Snippet%2031.sh"></script><p>&nbsp;</p><p>テストコードを書くに当たって、<a href="http://search.cpan.org/perldoc?Test::mysqld">Test::mysqld</a>&nbsp;というモジュールを使わせて頂きました。</p><p>mysql.sock をテスト用に作成して、テストが完了すると、自動的に削除してくれるので、実際動いている DB に干渉せず、安心して開発ができました。</p>]]></content:encoded>	<excerpt:encoded><![CDATA[先月、CPAN に公開したモジュール DBIx::Class::Storage::DBI::mysql::backup の紹介です。 DBIx::Class::Schema::Versioned にある、backup_directory という設定 目は、設定すると backup メソッドをコールする...]]></excerpt:encoded>		<wp:post_date>Tue Feb 01 12:55:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Tue Feb 01 12:55:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>41664187</wp:post_id>	<wp:post_name>dbixclassstoragedbimysqlbackup</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Posterous and Markdown plugin for @snippetsapp </title>	<link>http://blog.ngsdev.org/posterous-and-markdown-plugin-for-snippetsapp</link>	<pubDate>Mon Feb 14 08:00:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="github"><![CDATA[github]]></category>			<category domain="tag" nicename="markdown"><![CDATA[markdown]]></category>			<category domain="tag" nicename="posterous"><![CDATA[posterous]]></category>			<category domain="tag" nicename="scrippets"><![CDATA[scrippets]]></category>			<category domain="tag" nicename="snippets"><![CDATA[snippets]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/posterous-and-markdown-plugin-for-snippetsapp</guid>	<description></description>	<content:encoded><![CDATA[<p>I&rsquo;ve published 2 scrippets to GitHub.</p><p>The first is <em><a href="https://github.com/ngs/snippets-posterous-scrippet">Posterous</a></em>. This enables posting entries from Snippets.</p><p>We are able to write drafts in Snippets, and publish seamlessly.</p><p>However, Text lines don&rsquo;t break automatically.  To solve this, use one of the following two options:</p><ul><li>Wrap with <code>&lt;markdown&gt;&lt;/markdown&gt;</code> and write content with markdown syntax</li><li>or use HTML.</li></ul><p>When publishing private posts, links on the last screen may be broken because of Posterous API’s bug.</p><p>I mentioned this issue to the Posterous support team, I hope they fix this soon.</p><p>The second is <em><a href="https://github.com/ngs/snippets-markdown-scrippet">Preview Markdown</a></em>. This enables preview Markdown document.</p><hr /><p>2つの scrippet を GitHub で公開しました。</p><p>1つめは、<em><a href="https://github.com/ngs/snippets-posterous-scrippet">Posterous</a></em> です。 Snippets から Posterous にエントリーを投稿出来ます。</p><p>下書きを Snippets で書いて、そのまま公開できます。</p><p>自動的にされないので、<code>&lt;markdown&gt;&lt;/markdown&gt;</code> で本文を囲って Markdown 記法で書くか、HTML で書く必要があります。</p><p>非公開記事を投稿した場合、Posterous の API のバグが原因で、最後の画面に出てくるリンクは、壊れています。</p><p>Posterous サポートチームに問い合わせたので、早く治ればいいな、と思っています。</p><p>2つめは、<em><a href="https://github.com/ngs/snippets-markdown-scrippet">Markdown をプレビュー</a></em> です。</p><p>Markdown 文書をプレビューすることができます。</p><p>P.S. 海外の人向けに、ぎこちない英語と、日本の人向けにぎごちない日本語で書いてみました。変なところがあったらご指摘下さい。</p>]]></content:encoded>	<excerpt:encoded><![CDATA[I’ve published 2 scrippets to GitHub. The first is Posterous. This enables posting entries from Snippets. We are able to write drafts in Snippets, and publish seamlessly. However, Text lines don’t break automatically. To solve this, use one of...]]></excerpt:encoded>		<wp:post_date>Mon Feb 14 08:00:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Mon Feb 14 08:00:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>43035319</wp:post_id>	<wp:post_name>posterous-and-markdown-plugin-for-snippetsapp</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Three20 - extXMLRPC</title>	<link>http://blog.ngsdev.org/three20-extxmlrpc</link>	<pubDate>Sat Jan 29 11:19:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="github"><![CDATA[github]]></category>			<category domain="tag" nicename="hatena"><![CDATA[hatena]]></category>			<category domain="tag" nicename="ios"><![CDATA[ios]]></category>			<category domain="tag" nicename="objective-c"><![CDATA[objective-c]]></category>			<category domain="tag" nicename="three20"><![CDATA[three20]]></category>			<category domain="tag" nicename="xmlrpc"><![CDATA[xmlrpc]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/three20-extxmlrpc</guid>	<description></description>	<content:encoded><![CDATA[<p>去年、<a href="http://littleapps.jp/pages/ibacklog">iBacklog</a>&nbsp;を開発したときに作った、<a href="http://three20.info/">Three20</a>&nbsp;の XML-RPC 拡張を、私の branch にコミットして、Pull request したままだったのですが、「&nbsp;<a href="http://three20.info/extensions">Extentions</a> ページを <a href="http://three20.info/">Three20.info</a> に作ったので、そちらに登録してくれ 」とのことで、Pull せずに Close されてしまったので、独立したリポジトリを作って、登録しました。</p><p><span style="font-family: monospace; font-size: medium;"><a href="http://three20.info/extension/extXMLRPC">extXMLRPC | Extensions | Three20</a></span></p><p>使い方は、上記のページの <em>Breakdown</em> に記載されていますが、去年の 10月に、Facebook の Jeff 氏に言われて、 ( YAPC Asia に参加中に片手間で )&nbsp;作ったサンプルも公開しているので、参考になればと思います。</p><p><a href="https://github.com/ngs/Samples/tree/master/XMLRPCSample">ngs / Samples/tree/master/XMLRPCSample</a></p><p>このサンプルは " <a href="http://developer.hatena.ne.jp/ja/documents/keyword/apis/association">はてなキーワード連想語API</a>&nbsp;" を使って、延々と関連ワードを辿ってゆくものです。</p><p><div class='p_embed p_image_embed'><a href="http://getfile5.posterous.com/getfile/files.posterous.com/temp-2011-01-29/ioDBefIqEmivIIlvkDoxCCEedEFkaCbndspqIeBvhGHAnGbuHItqxkgIGdbD/capture.jpg"><img alt="Capture" src="http://getfile5.posterous.com/getfile/files.posterous.com/temp-2011-01-29/ioDBefIqEmivIIlvkDoxCCEedEFkaCbndspqIeBvhGHAnGbuHItqxkgIGdbD/capture.jpg" /></a></div></p>]]></content:encoded>	<excerpt:encoded><![CDATA[去年、iBacklog を開発したときに作った、Three20 の XML-RPC 拡張を、私の branch にコミットして、Pull request したまま ったのですが、「 Extentions ページを Three20.info に作ったので、そちらに...]]></excerpt:encoded>		<wp:post_date>Sat Jan 29 11:19:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Sat Jan 29 11:19:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>41356717</wp:post_id>	<wp:post_name>three20-extxmlrpc</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>Converting VMWare .vmdk to VirtualBox .vdi</title>	<link>http://blog.ngsdev.org/converting-vmware-vmdk-to-virtualbox-vdi</link>	<pubDate>Mon Feb 28 10:04:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="centos"><![CDATA[centos]]></category>			<category domain="tag" nicename="macosx"><![CDATA[macosx]]></category>			<category domain="tag" nicename="virtualbox"><![CDATA[virtualbox]]></category>			<category domain="tag" nicename="vm"><![CDATA[vm]]></category>			<category domain="tag" nicename="vmware"><![CDATA[vmware]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/converting-vmware-vmdk-to-virtualbox-vdi</guid>	<description></description>	<content:encoded><![CDATA[<p>VMWare で作成した仮想端末を VirtualBox に移行するのに、ハマったのでメモです。</p><ol><li><em>Virtual Machine Library</em> から VM を選択、コンテキストメニューから <em>Settings</em> を選択、もしくは <code>CMD+E</code> で設定画面を表示</li><li><em>HardDisks</em> を選択</li><li><em>Split into 2 GB Files</em> のチェックを外し、<em>Apply</em> ボタンをクリック</li><li><em>Virtual Machine Library</em> から VM を選択、コンテキストメニューから <em>Show In Finder</em> を選択</li><li><em>Q.app</em> をダウンロード + インストール。<a href="http://www.kju-app.org/">Q &ndash; [kju:]</a></li><li><p><em>Terminal.app</em> などを使って cli で、以下のコマンドを実行</p><div class="CodeRay">  <div class="code"><pre>$ cd ~/Documents/Virtual\ Machines $ /Applications/Q.app/Contents/MacOS/qemu-img convert $VMMACHINE$.vmwarevm/$VMDISK$.vmdk raw-file.bin $ /Applications/VirtualBox.app/Contents/MacOS/VBoxManage convertdd raw-file.bin $VMMACHINE$.vdi $ rm raw-file.bin</pre></div></div></li><li><p><em>.vdi</em> ファイルは、自分の管理しやすい場所に移動します。</p></li><li><em>VirtualBox.app</em> を起動。</li><li>ツールバーから、<em>New</em> ボタンをクリック。ウィザードにしたがって、Name / OS / Version / Memory を然るべき値に設定</li><li><em>Virtual Hard Disk</em> の画面まできたら <em>Book Hard Disk</em> はチェック、<em>Use existing hard disk</em> を選択し、プルダウン右にある、参照アイコンをクリックして、<em>.vdi</em> ファイルを選択。ウィザードを完了させます。</li><li><p>cli から、以下のコマンドを実行します。</p><div class="CodeRay">  <div class="code"><pre>$ /Applications/VirtualBox.app/Contents/MacOS/VBoxManage modifyvdi $VMMACHINE$.vdi compact</pre></div></div></li><li><p><em>VirtualBox.app</em> の <em>VirtualBox Manager</em> から、VM を選択し、コンテキストメニューから、または<code>CMD+S</code> で <em>Settings</em> を開き、<em>Storage</em> に移動。</p></li><li><em>SATA Controller</em> の下に、<em>.vdi</em> ファイルが入っているので、選択してコンテキストメニューから <em>Remove Attachment</em> を選択</li><li><em>IDE Controller</em> を選択して、コンテキストメニューから <em>Add HardDisk</em> を選択、<em>Choose existing disk</em> を選択し、<em>.vdi</em> ファイルを選択。<em>OK</em> ボタンで設定完了</li></ol><p>以上で移行が完了しました。<br />Mac OS X 10.6.6 / VMWare Fusion 2.0.6 / VirtualBox 4.0.4、VM は CentOS-5.5 32 bit でした。</p><p>参考にしたサイト</p><ul><li><a href="http://mariusvw.com/2009/08/29/converting-from-vmware-vmdk-to-virtualbox-vdi-on-mac-os-x/">Converting from VMware (vmdk) to VirtualBox (vdi) on Mac OS X</a></li><li><a href="http://serverfault.com/questions/51965/mounting-opening-virtualbox-disk-image-vdi-on-linux-host">Mounting/opening virtualbox disk image (vdi) on linux host</a></li></ul>]]></content:encoded>	<excerpt:encoded><![CDATA[VMWare で作成した仮想端末を VirtualBox に移行するのに、ハマったのでメモです。 Virtual Machine Library から VM を選択、コンテキストメニューから Settings を選択、もしくは CMD+E で設定画面...]]></excerpt:encoded>		<wp:post_date>Mon Feb 28 10:04:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Mon Feb 28 10:04:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>44468105</wp:post_id>	<wp:post_name>converting-vmware-vmdk-to-virtualbox-vdi</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>しまなみ海道 と LiveCycling の SQLite</title>	<link>http://blog.ngsdev.org/livecycling-db-ruby</link>	<pubDate>Sun Jan 01 11:33:00 -0800 2012</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="%E3%81%97%E3%81%BE%E3%81%AA%E3%81%BF%E6%B5%B7%E9%81%93"><![CDATA[しまなみ海道]]></category>			<category domain="tag" nicename="cycling"><![CDATA[cycling]]></category>			<category domain="tag" nicename="LiveCycling"><![CDATA[LiveCycling]]></category>			<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>			<category domain="tag" nicename="%E5%B0%BE%E9%81%93"><![CDATA[尾道]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/livecycling-db-ruby</guid>	<description></description>	<content:encoded><![CDATA[<p>あけましておめでとうございます。今年もよろしくお願いいたします。</p><p>現在、母の田舎の尾道に帰っています。今回は輪行でロードバイクを持ってきました。</p><p><a href="http://www.flickr.com/photos/atsnngs/6613758031/" title="Untitled by atsnngs, on Flickr"><img src="http://farm8.staticflickr.com/7152/6613758031_59ee09d61d.jpg" height="375" alt="" width="500" /></a></p><p>2011/12/30 向島 - 今治 - 瀬戸田 というコースでしまなみ海道を渡ってきました。</p><p>Strava にアップしている情報 ( 速度、位置、ケイデンス、心拍数 )は iPhone アプリの <a href="http://goo.gl/is1CY">LiveCycling</a> を使用しており、途中で電池が切れてスペアの iPhone に交換したので、記録が2つに分かれています。</p><p><iframe scrolling="no" src="http://app.strava.com/runs/2968996/embed/13d42a6ddc4e3161a9060a85af0cc8a8c458398c" frameborder="0" height="405" width="500"></iframe> <iframe scrolling="no" src="http://app.strava.com/runs/2969000/embed/52b7b944474a468a161bf268f1367f886509064a" frameborder="0" height="405" width="500"></iframe></p><p>後でメインの iPhone にスペア分をコピーするために、スクリプトを書いたので Gist に手順を残しておきました<br /> <a href="https://gist.github.com/1540055">Gist:1540055</a></p><p>// LiveCycling に .tcx を読み込む機能があれば、こんなことする手間をかけなくて良かったのになー、と思います。</p><script src="https://gist.github.com/1540055.js?file=README.mkdn"></script><script src="https://gist.github.com/1540055.js?file=import.rb"></script><p>とりあえず普段使いは引き続き <a href="http://goo.gl/is1CY">LiveCycling</a> ですが、長距離用に <a href="http://amzn.to/ukFTKs">Garmin edge 500</a> をポチりました。東京に帰る頃には手に入ると思います。wktk</p><p>おそらくこれによって、次は .tcx から、もしくは Garmin Connect から SQLite へ読み込ませるスクリプトを書くことになる予感です。<a href="http://developer.garmin.com/">API も充実してるみたいで</a>楽しみです。</p><p><iframe marginheight="0" scrolling="no" src="http://rcm-jp.amazon.co.jp/e/cm?lt1=_blank&amp;bc1=FFFFFF&amp;IS2=1&amp;bg1=FFFFFF&amp;fc1=000000&amp;lc1=0000FF&amp;t=atsushnagased-22&amp;o=9&amp;p=8&amp;l=as1&amp;m=amazon&amp;f=ifr&amp;ref=tf_til&amp;asins=B003JZEL8U" marginwidth="0" frameborder="0" height="240" width="120"></iframe> <iframe src="http://widgets.itunes.apple.com/appstore.html?wtype=0&amp;app_id=407471916&amp;country=jp&amp;partnerId=30&amp;affiliate_id=http%3A%2F%2Fclick.linksynergy.com%2Ffs-bin%2Fstat%3Fid%3DCzqa8CY9CFY%26offerid%3D94348%26type%3D3%26subid%3D0%26tmpid%3D2192%26RD_PARM1%3D" border="0&quot;" frameborder="0" height="300" width="250"></iframe></p><p><a href="http://www.flickr.com/photos/atsnngs/6613762575/" title="Untitled by atsnngs, on Flickr"><img src="http://farm8.staticflickr.com/7011/6613762575_3a10c12657.jpg" height="500" alt="" width="375" /></a> <a href="http://www.flickr.com/photos/atsnngs/6613754547/" title="Untitled by atsnngs, on Flickr"><img src="http://farm8.staticflickr.com/7162/6613754547_7db8965dd6.jpg" height="500" alt="" width="375" /></a></p><h4>Path x Foursquare x ifttt x Google Calendar</h4><p>移動中、Path から写真とチェックインを <a href="http://twitter.com/ngs">Twitter</a> / <a href="http://fb.me/atsnngs">Facebook</a> /  <a href="http://foursquare.com/ngs">Foursquare</a> に対して続けてました。</p><p>少し前から <a href="http://ifttt.com/">ifttt</a> で if <strong>Foursquare</strong> then <strong>Google Calendar</strong> というタスクを設定していたので、以下の様に細かくどこにいたか記録されていて、今後のスケジュール作成に活用できそうです。</p><p><a href="http://www.flickr.com/photos/atsnngs/6613940287/" title="Screen Shot 2012-01-02 at 3.39.38 AM by atsnngs, on Flickr"><img src="http://farm8.staticflickr.com/7170/6613940287_ecd1889b41.jpg" height="500" alt="Screen Shot 2012-01-02 at 3.39.38 AM" width="429" /></a></p><h4>その他反省点</h4><ul><li>通行料の料金箱が賽銭箱式で、50円玉がなく、少しずつ損してました。後で知りましたが サイクリングチケット なるものがあったそうです。小銭を探す手間も省けるし、良いですね。( 参考: <a href="http://www.go-shimanami.jp/rental/001.html">SHIMAP【サイクリング】料金表</a> )</li><li>日が落ちると、街灯がなく、橋の入り口が分からなくなりました。(幸い迷子になりませんでしたが。。) 今度はゆとりを持って早朝に出発して、日が暮れないように帰ってきます。</li></ul>]]></content:encoded>	<excerpt:encoded><![CDATA[あけましておめでとうございます。今年もよろしくお願いいたします。 現在、母の田舎の尾道に帰っています。今回は輪行でロードバイクを持ってきました。 2011/12/30 向島 - 今治 - 瀬...]]></excerpt:encoded>		<wp:post_date>Sun Jan 01 11:33:00 -0800 2012</wp:post_date>	<wp:post_date_gmt>Sun Jan 01 11:33:00 -0800 2012</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>91528041</wp:post_id>	<wp:post_name>livecycling-db-ruby</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>	</item><item>	<title>node.js の mysql-native を使うと文字化けする</title>	<link>http://blog.ngsdev.org/nodejs-mysql-native</link>	<pubDate>Tue Feb 22 11:24:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="charset"><![CDATA[charset]]></category>			<category domain="tag" nicename="mysql"><![CDATA[mysql]]></category>			<category domain="tag" nicename="node.js"><![CDATA[node.js]]></category>			<category domain="tag" nicename="problem"><![CDATA[problem]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/nodejs-mysql-native</guid>	<description></description>	<content:encoded><![CDATA[<p><a href="http://sequelizejs.com/">Sequelize</a> を使ってアプリを作っているのですが、どうしても、日本語がうまく入りません。</p><p>Sequelize は、<a href="https://github.com/sidorares/nodejs-mysql-native">mysql-native</a> をドライバとして採用しており、こちらをそのまま、以下の様にシンプルに叩いてみても、やはり文字化けします。</p><p><p><a href="https://gist.github.com/839181.js?file=test-mysql-native">https://gist.github.com/839181.js?file=test-mysql-native</a></p></p><p>別のモジュールで、<a href="https://github.com/felixge/node-mysql">node-mysql</a> を使うとうまくいきます。</p><p><p><a href="https://gist.github.com/839181.js?file=test-mysql">https://gist.github.com/839181.js?file=test-mysql</a></p></p><p>参考までに DDL です。</p><p><script src="https://gist.github.com/839181.js?file=schema.sql"></script></p><p>Sequelize のコードに手を入れるべきか、mysql-native のコードに手を入れるべきか、もし、正しい解決方法をご存知の方がいらっしゃいましたらご教示ください。</p><hr /><h2>2011-02-23 16:55:00 JST 追記</h2><p><a href="https://github.com/sidorares/nodejs-mysql-native">mysql-native</a> の代わりに <a href="https://github.com/felixge/node-mysql">node-mysql</a> を使うパッチをコミットしました。 <a href="http://bit.ly/eth5WX">http://bit.ly/eth5WX</a>。</p>]]></content:encoded>	<excerpt:encoded><![CDATA[Sequelize を使ってアプリを作っているのですが、どうしても、日本語がうまく入りません。 Sequelize は、mysql-native をドライバとして採用しており、こちらをそのまま、以下の様にシンプ...]]></excerpt:encoded>		<wp:post_date>Tue Feb 22 11:24:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Tue Feb 22 11:24:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>43861474</wp:post_id>	<wp:post_name>nodejs-mysql-native</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>			<wp:comment>			<wp:comment_id>10718422</wp:comment_id>							<wp:comment_author><![CDATA[Ethan]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Mon Mar 12 19:49:27 -0700 2012</wp:comment_date>			<wp:comment_date_gmt>Mon Mar 12 19:49:27 -0700 2012</wp:comment_date_gmt>			<wp:comment_content><![CDATA[very useful tips.3Q~~  i use to mysql-native to insert chinses character alway has ERROR,and change to mysql modull is sovled.]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>	</item><item>	<title>Snippets の Gist.scrippet で Private gist したい。</title>	<link>http://blog.ngsdev.org/snippets-gist-bundle</link>	<pubDate>Sat Feb 12 14:20:00 -0800 2011</pubDate>		<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>				<category domain="tag" nicename="gist"><![CDATA[gist]]></category>			<category domain="tag" nicename="github"><![CDATA[github]]></category>			<category domain="tag" nicename="ruby"><![CDATA[ruby]]></category>			<category domain="tag" nicename="scrippets"><![CDATA[scrippets]]></category>			<category domain="tag" nicename="snippets"><![CDATA[snippets]]></category>		<category><![CDATA[Uncategorized]]></category>	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>  <guid isPermaLink="false">http://blog.ngsdev.org/snippets-gist-bundle</guid>	<description></description>	<content:encoded><![CDATA[<p>深津さんの、エントリー "<a href="http://fladdict.net/blog/2011/02/ios-automatism.html"> iOS開発におけるパターンによるオートマティズム</a> " を読んで、早速私も Amazon で購入しました。</p><p>まだ、第一章しか読んでいないので、感想は書けません。</p><p>&nbsp;</p><p>このエントリーで、<a href="http://www.snippetsapp.com/">Snippets</a> というソフトウェアに触れられていたので、ダウンロードして、試用しています。</p><p>今まで、同じ様な用途に、Evernote を使っていたのですが、こちらは、テキストデータに特化しているので、検索が早く、シンタックスハイライトも付いているので、気に入りました。</p><p>メニューバーから、<a href="http://www.snippetsapp.com/extras/">Scrippets</a> という、拡張機能が選択でき、そこから、各種スニペット共有サイトにポストできたり、Placeholder (テンプレートタグみたいなもの) を置換したりできます。画像のものは、バンドルされているものです。</p><p>自作や、配布されているものを、新たに追加することも可能です。</p><p><img src="http://farm6.static.flickr.com/5213/5439175703_001b3f1e0b_o.png" alt="" style="" /></p><p>この中の、gist.github.com は、ブラウザでログインしている、いない、に関わらず、Anonymous として投稿されてしまいます。もちろん、Private gist も作れません。</p><p>なので、恐らく、この bundle の作者の、ベルギーの Simon さんという方のリポジトリを fork して、修正しました。</p><p><img src="http://farm5.static.flickr.com/4093/5439198095_e2db7161e3_o.png" alt="" /></p><p>オリジナルは、Gist Create API :&nbsp;<a href="http://gist.github.com/api/v1/xml/new">http://gist.github.com/api/v1/xml/new</a> に、データを POST していたのですが、Private gist が仕様が公開されていないか、サポートされていないか、私が見過ごしたか、なので、<a href="https://github.com/defunkt/gist">gist のコマンドラインツール</a>&nbsp;のコードを参考に、Gist の投稿ページ :&nbsp;<a href="https://gist.github.com/gists">https://gist.github.com/gists</a> へポストする様に<a href="https://github.com/cimm/snippets-gist-scrippet/pull/1/files">変更しました</a>。</p><p>一応、Pull request したので、もしかしたらバンドルされるかもしれませんが、もし、同じ悩みをかかえている人がいたら、私のリポジトリから、ソースを落として下さい。</p><p><a href="https://github.com/ngs/snippets-gist-scrippet">https://github.com/ngs/snippets-gist-scrippet</a></p><p>インストールするとき、" 既に、Gist.scrippet はインストールされてるよ " と怒られるので、その前に、一度 Snippets を終了して、Snippets.app/SharedSupport/Scrippets/Gist.scrippet を、リネームするなり、削除するなりして下さい。</p><p>&nbsp;</p><p>Scrippets は、JavaScript / CSS / HTML / Ruby で実装されているので、簡単に作成できます。</p><p>API リファレンスが見当たらないので、仕様は手探りなのですが、Snippets.app/Contents/Resources/Scrippet.js に実装されているクラスのコードを読めば、JavaScript からアクセシブルな情報は、全て理解できます。</p><p>パッケージの構造は、<a href="http://www.slideshare.net/snippets/introducing-scrippets">こちらのスライド </a>の 28 ページ目で紹介されています。</p><p>また今度、自分オリジナルの Scrippet を作ってみたいと思います。</p>]]></content:encoded>	<excerpt:encoded><![CDATA[深津さんの、エントリー " iOS開発におけるパターンによるオートマティズ  " を読んで、早速私も Amazon で購入しました。 ま 、第一 しか読んでいないので、感想は書けません。 こ...]]></excerpt:encoded>		<wp:post_date>Sat Feb 12 14:20:00 -0800 2011</wp:post_date>	<wp:post_date_gmt>Sat Feb 12 14:20:00 -0800 2011</wp:post_date_gmt>	<wp:comment_status>open</wp:comment_status>	<wp:ping_status>open</wp:ping_status>	<wp:post_id>42850786</wp:post_id>	<wp:post_name>snippets-gist-bundle</wp:post_name>	<wp:status>publish</wp:status>	<wp:post_parent>0</wp:post_parent>	<wp:menu_order>0</wp:menu_order>	<wp:post_type>post</wp:post_type>	<wp:post_password></wp:post_password>	<wp:is_sticky>0</wp:is_sticky>			<wp:comment>			<wp:comment_id>7079352</wp:comment_id>							<wp:comment_author><![CDATA[Cimm]]></wp:comment_author>				<wp:comment_author_url><![CDATA[]]></wp:comment_author_url>						<wp:comment_date>Sat Feb 12 15:30:56 -0800 2011</wp:comment_date>			<wp:comment_date_gmt>Sat Feb 12 15:30:56 -0800 2011</wp:comment_date_gmt>			<wp:comment_content><![CDATA[I don't understand Japanese but I'm trying out your modifications right now. Looks awesome, thanks man!]]></wp:comment_content>			<wp:comment_approved>1</wp:comment_approved>			<wp:comment_type></wp:comment_type>			<wp:comment_parent>0</wp:comment_parent>		</wp:comment>	</item></channel></rss>