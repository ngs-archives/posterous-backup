<item>
	<title>DBIx::Class::Storage::DBI::mysql::backup</title>
	<link>http://blog.ngsdev.org/dbixclassstoragedbimysqlbackup</link>
	<pubDate>Tue Feb 01 12:55:00 -0800 2011</pubDate>
	
	<dc:creator><![CDATA[Atsushi Nagase]]></dc:creator>
	
	
		<category domain="tag" nicename="backup"><![CDATA[backup]]></category>
	
		<category domain="tag" nicename="cpan"><![CDATA[cpan]]></category>
	
		<category domain="tag" nicename="DBIx%3A%3AClass"><![CDATA[DBIx::Class]]></category>
	
		<category domain="tag" nicename="mysql"><![CDATA[mysql]]></category>
	
		<category domain="tag" nicename="perl"><![CDATA[perl]]></category>
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://blog.ngsdev.org/dbixclassstoragedbimysqlbackup</guid>
	<description></description>
	<content:encoded><![CDATA[<p>先月、CPAN に公開したモジュール&nbsp;<a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI::mysql::backup">DBIx::Class::Storage::DBI::mysql::backup</a> の紹介です。</p>
<p><a href="http://search.cpan.org/perldoc?DBIx::Class::Schema::Versioned">DBIx::Class::Schema::Versioned</a>&nbsp;にある、<code>backup_directory</code>&nbsp;という設定項目は、設定すると <code>backup</code>&nbsp;メソッドをコールするだけで、設定したディレクトリにバックアップを作成してくれるのだろうな、と思いますが、実は、<a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI::SQLite">SQLite</a> など ( 他の DBI は確認してません ) 、<span style=""><a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI">DBIx::Class::Storage::DBI</a> のサブクラス側で各々実装するものらしく、MySQL で</span>&nbsp;<code>backup</code>&nbsp;メソッドをコールすると、以下の様に <code>die</code> してしまいます。</p>
<blockquote><code style="font-size: 1em;">Can't locate object method "backup" via package "DBIx::Class::Storage::DBI"<br /> &nbsp;&nbsp;&nbsp;&nbsp;at /path/to/lib/site_perl/5.xx.x/DBIx/Class/Schema/Versioned.pm line 560.</code></blockquote>
<p><a href="http://search.cpan.org/perldoc?DBIx::Class::Storage::DBI::mysql::backup#SYNOPSIS">SYNOPSIS</a>&nbsp;に書いた様に、<span style="font-family: monospace;">Storage::DBI::mysql::backup</span>&nbsp;を、Schema.pm (&nbsp;<span style="">DBIx::Class::Schema のサブクラス</span>&nbsp;) の&nbsp;<code>load_components</code>&nbsp;に加えて下さい。</p>
<script src="https://gist.github.com/825200.js?file=MyApp-Schema.pl"></script>
<p>これで&nbsp;<code>backup</code>&nbsp;メソッドをコールしても&nbsp;<code>die</code>&nbsp;しなくなりました。</p>
<script src="https://gist.github.com/825200.js?file=Snippet%2029.pl"></script>
<p><span style="font-family: monospace;">backup_directory</span>&nbsp;で 設定したディレクトリに、<em>myapp_db-20110202-050441.sql</em> という名前で、ダンプデータが作成されていると思います。</p>
<p>よかったら、是非、使ってみてください。</p>
<script src="https://gist.github.com/825200.js?file=Snippet%2030.sh"></script>
<p>or checkout from GitHub</p>
<script src="https://gist.github.com/825200.js?file=Snippet%2031.sh"></script>
<p>&nbsp;</p>
<p>テストコードを書くに当たって、<a href="http://search.cpan.org/perldoc?Test::mysqld">Test::mysqld</a>&nbsp;というモジュールを使わせて頂きました。</p>
<p>mysql.sock をテスト用に作成して、テストが完了すると、自動的に削除してくれるので、実際動いている DB に干渉せず、安心して開発ができました。</p>]]></content:encoded>
	<excerpt:encoded><![CDATA[先月、CPAN に公開したモジュール DBIx::Class::Storage::DBI::mysql::backup の紹介です。 DBIx::Class::Schema::Versioned にある、backup_directory という設定 目は、設定すると backup メソッドをコールする...]]></excerpt:encoded>	

	<wp:post_date>Tue Feb 01 12:55:00 -0800 2011</wp:post_date>
	<wp:post_date_gmt>Tue Feb 01 12:55:00 -0800 2011</wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_id>41664187</wp:post_id>
	<wp:post_name>dbixclassstoragedbimysqlbackup</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
